{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot5": {
      "main": [
        [
          {
            "node": "Locate On Screen5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen5": {
      "main": [
        [
          {
            "node": "Coordinate Parser5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser5": {
      "main": [
        [
          {
            "node": "Click6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click6": {
      "main": [
        [
          {
            "node": "Save Screenshot6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Close&Open",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot6": {
      "main": [
        [
          {
            "node": "Locate On Screen6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen6": {
      "main": [
        [
          {
            "node": "Coordinate Parser6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser6": {
      "main": [
        [
          {
            "node": "Click7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click7": {
      "main": [
        [
          {
            "node": "Save Screenshot7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot7": {
      "main": [
        [
          {
            "node": "Locate On Screen7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen7": {
      "main": [
        [
          {
            "node": "Coordinate Parser7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser7": {
      "main": [
        [
          {
            "node": "Click8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click8": {
      "main": [
        [
          {
            "node": "Save Screenshot8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenBrowserCmd1": {
      "main": [
        []
      ]
    },
    "Split Out": {
      "main": [
        []
      ]
    },
    "Click9": {
      "main": [
        [
          {
            "node": "Screenshot1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase9": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y7": {
      "main": [
        [
          {
            "node": "Click9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate11": {
      "main": [
        [
          {
            "node": "X,Y7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot11": {
      "main": [
        [
          {
            "node": "Locate11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click13": {
      "main": [
        [
          {
            "node": "Screenshot12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y8": {
      "main": [
        [
          {
            "node": "Click13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate1": {
      "main": [
        [
          {
            "node": "X,Y8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot1": {
      "main": [
        [
          {
            "node": "Locate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click31": {
      "main": [
        [
          {
            "node": "Supabase9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y9": {
      "main": [
        [
          {
            "node": "Click31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate12": {
      "main": [
        [
          {
            "node": "X,Y9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot12": {
      "main": [
        [
          {
            "node": "Locate12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click32": {
      "main": [
        [
          {
            "node": "Screenshot14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y10": {
      "main": [
        [
          {
            "node": "Click32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate13": {
      "main": [
        [
          {
            "node": "X,Y10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot13": {
      "main": [
        [
          {
            "node": "Locate13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Ruta MonoyPago1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta Insc.Auto.Mono1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta PPolisa.Acc.Pers1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click36": {
      "main": [
        [
          {
            "node": "Screenshot15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y11": {
      "main": [
        [
          {
            "node": "Click36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate14": {
      "main": [
        [
          {
            "node": "X,Y11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot14": {
      "main": [
        [
          {
            "node": "Locate14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click37": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y12": {
      "main": [
        [
          {
            "node": "Click37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate15": {
      "main": [
        [
          {
            "node": "X,Y12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot15": {
      "main": [
        [
          {
            "node": "Locate15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta MonoyPago1": {
      "main": [
        [
          {
            "node": "Save Screenshot31",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta MonoyPago1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta Insc.Auto.Mono1": {
      "main": [
        [
          {
            "node": "Save Screenshot31",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta Insc.Auto.Mono1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta PPolisa.Acc.Pers1": {
      "main": [
        [
          {
            "node": "Save Screenshot31",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta PPolisa.Acc.Pers1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click38": {
      "main": [
        [
          {
            "node": "Save Screenshot21",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y13": {
      "main": [
        [
          {
            "node": "Click38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate16": {
      "main": [
        [
          {
            "node": "X,Y13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot16": {
      "main": [
        [
          {
            "node": "Locate16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot8": {
      "main": [
        [
          {
            "node": "Locate On Screen8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen8": {
      "main": [
        [
          {
            "node": "Coordinate Parser8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser8": {
      "main": [
        [
          {
            "node": "Click10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click10": {
      "main": [
        [
          {
            "node": "Save Screenshot9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot9": {
      "main": [
        [
          {
            "node": "Locate On Screen9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen9": {
      "main": [
        [
          {
            "node": "Coordinate Parser9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser9": {
      "main": [
        [
          {
            "node": "Click11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click11": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot31": {
      "main": [
        [
          {
            "node": "Locate On Screen30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen30": {
      "main": [
        [
          {
            "node": "Coordinate Parser28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser28": {
      "main": [
        [
          {
            "node": "Click39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click39": {
      "main": [
        [
          {
            "node": "Save Screenshot40",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "Screenshot11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click": {
      "main": [
        [
          {
            "node": "Screenshot2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y": {
      "main": [
        [
          {
            "node": "Click",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate": {
      "main": [
        [
          {
            "node": "X,Y",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot": {
      "main": [
        [
          {
            "node": "Locate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click14": {
      "main": [
        [
          {
            "node": "Screenshot17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y14": {
      "main": [
        [
          {
            "node": "Click14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate2": {
      "main": [
        [
          {
            "node": "X,Y14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot2": {
      "main": [
        [
          {
            "node": "Locate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click40": {
      "main": [
        [
          {
            "node": "Supabase11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y15": {
      "main": [
        [
          {
            "node": "Click40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate17": {
      "main": [
        [
          {
            "node": "X,Y15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot17": {
      "main": [
        [
          {
            "node": "Locate17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [
          {
            "node": "Screenshot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click12": {
      "main": [
        [
          {
            "node": "Screenshot3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y20": {
      "main": [
        [
          {
            "node": "Click12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate22": {
      "main": [
        [
          {
            "node": "X,Y20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot22": {
      "main": [
        [
          {
            "node": "Locate22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click15": {
      "main": [
        [
          {
            "node": "Screenshot23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y21": {
      "main": [
        [
          {
            "node": "Click15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate3": {
      "main": [
        [
          {
            "node": "X,Y21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot3": {
      "main": [
        [
          {
            "node": "Locate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click49": {
      "main": [
        [
          {
            "node": "Supabase12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y22": {
      "main": [
        [
          {
            "node": "Click49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate23": {
      "main": [
        [
          {
            "node": "X,Y22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot23": {
      "main": [
        [
          {
            "node": "Locate23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [
          {
            "node": "Screenshot22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Close&Open": {
      "main": [
        [
          {
            "node": "Save Screenshot5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot40": {
      "main": [
        [
          {
            "node": "Locate On Screen38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen38": {
      "main": [
        [
          {
            "node": "Coordinate Parser34",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Coordinate Parser34": {
      "main": [
        [
          {
            "node": "Click58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click58": {
      "main": [
        [
          {
            "node": "Save Screenshot41",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot41": {
      "main": [
        [
          {
            "node": "Locate On Screen39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen39": {
      "main": [
        [
          {
            "node": "Coordinate Parser35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser35": {
      "main": [
        [
          {
            "node": "Click59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click59": {
      "main": [
        [
          {
            "node": "Save Screenshot43",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen40": {
      "main": [
        [
          {
            "node": "Coordinate Parser36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser36": {
      "main": [
        [
          {
            "node": "Click60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot42": {
      "main": [
        [
          {
            "node": "Locate On Screen41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen41": {
      "main": [
        [
          {
            "node": "Coordinate Parser37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser37": {
      "main": [
        [
          {
            "node": "Click61",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click61": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click60": {
      "main": [
        [
          {
            "node": "Save Screenshot42",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot43": {
      "main": [
        [
          {
            "node": "Locate On Screen40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot21": {
      "main": [
        [
          {
            "node": "Local OCR Tesseract",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Screenshot13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Local OCR Tesseract": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase11": {
      "main": [
        [
          {
            "node": "Loop Over Items7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click33": {
      "main": [
        [
          {
            "node": "Screenshot29",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y27": {
      "main": [
        [
          {
            "node": "Click33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate28": {
      "main": [
        [
          {
            "node": "X,Y27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot28": {
      "main": [
        [
          {
            "node": "Locate28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Ruta MonoyPago3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta Insc.Auto.Mono3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta PPolisa.Acc.Pers3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click62": {
      "main": [
        [
          {
            "node": "Screenshot30",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y28": {
      "main": [
        [
          {
            "node": "Click62",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate29": {
      "main": [
        [
          {
            "node": "X,Y28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot29": {
      "main": [
        [
          {
            "node": "Locate29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click63": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y29": {
      "main": [
        [
          {
            "node": "Click63",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate30": {
      "main": [
        [
          {
            "node": "X,Y29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot30": {
      "main": [
        [
          {
            "node": "Locate30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta MonoyPago3": {
      "main": [
        [
          {
            "node": "Save Screenshot44",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta MonoyPago3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta Insc.Auto.Mono3": {
      "main": [
        [
          {
            "node": "Save Screenshot44",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta Insc.Auto.Mono3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta PPolisa.Acc.Pers3": {
      "main": [
        [
          {
            "node": "Save Screenshot44",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta PPolisa.Acc.Pers3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items7": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click64": {
      "main": [
        [
          {
            "node": "Save Screenshot22",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y30": {
      "main": [
        [
          {
            "node": "Click64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate31": {
      "main": [
        [
          {
            "node": "X,Y30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot31": {
      "main": [
        [
          {
            "node": "Locate31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot44": {
      "main": [
        [
          {
            "node": "Locate On Screen42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen42": {
      "main": [
        [
          {
            "node": "Coordinate Parser38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser38": {
      "main": [
        [
          {
            "node": "Click65",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click65": {
      "main": [
        [
          {
            "node": "Save Screenshot45",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot45": {
      "main": [
        [
          {
            "node": "Locate On Screen43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen43": {
      "main": [
        [
          {
            "node": "Coordinate Parser39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser39": {
      "main": [
        [
          {
            "node": "Click66",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click66": {
      "main": [
        [
          {
            "node": "Save Screenshot46",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot46": {
      "main": [
        [
          {
            "node": "Locate On Screen44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen44": {
      "main": [
        [
          {
            "node": "Coordinate Parser40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser40": {
      "main": [
        [
          {
            "node": "Click67",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click67": {
      "main": [
        [
          {
            "node": "Save Screenshot48",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen45": {
      "main": [
        [
          {
            "node": "Coordinate Parser41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser41": {
      "main": [
        [
          {
            "node": "Click68",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click68": {
      "main": [
        [
          {
            "node": "Save Screenshot47",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot47": {
      "main": [
        [
          {
            "node": "Locate On Screen46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen46": {
      "main": [
        [
          {
            "node": "Coordinate Parser42",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser42": {
      "main": [
        [
          {
            "node": "Click69",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click69": {
      "main": [
        [
          {
            "node": "Loop Over Items7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot48": {
      "main": [
        [
          {
            "node": "Locate On Screen45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Screenshot28",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot22": {
      "main": [
        [
          {
            "node": "Local OCR Tesseract3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Local OCR Tesseract3": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase12": {
      "main": [
        [
          {
            "node": "Loop Over Items8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click34": {
      "main": [
        [
          {
            "node": "Screenshot33",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y31": {
      "main": [
        [
          {
            "node": "Click34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate32": {
      "main": [
        [
          {
            "node": "X,Y31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot32": {
      "main": [
        [
          {
            "node": "Locate32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "Ruta MonoyPago4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta Insc.Auto.Mono4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta PPolisa.Acc.Pers4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click70": {
      "main": [
        [
          {
            "node": "Screenshot34",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y32": {
      "main": [
        [
          {
            "node": "Click70",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate33": {
      "main": [
        [
          {
            "node": "X,Y32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot33": {
      "main": [
        [
          {
            "node": "Locate33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click71": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y33": {
      "main": [
        [
          {
            "node": "Click71",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate34": {
      "main": [
        [
          {
            "node": "X,Y33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot34": {
      "main": [
        [
          {
            "node": "Locate34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta MonoyPago4": {
      "main": [
        [
          {
            "node": "Save Screenshot49",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta MonoyPago4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta Insc.Auto.Mono4": {
      "main": [
        [
          {
            "node": "Save Screenshot49",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta Insc.Auto.Mono4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ruta PPolisa.Acc.Pers4": {
      "main": [
        [
          {
            "node": "Save Screenshot49",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ruta PPolisa.Acc.Pers4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items8": {
      "main": [
        [
          {
            "node": "CloseTab1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click72": {
      "main": [
        [
          {
            "node": "Save Screenshot23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Screenshot35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "X,Y34": {
      "main": [
        [
          {
            "node": "Click72",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate35": {
      "main": [
        [
          {
            "node": "X,Y34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Screenshot35": {
      "main": [
        [
          {
            "node": "Locate35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot49": {
      "main": [
        [
          {
            "node": "Locate On Screen47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen47": {
      "main": [
        [
          {
            "node": "Coordinate Parser43",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser43": {
      "main": [
        [
          {
            "node": "Click73",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click73": {
      "main": [
        [
          {
            "node": "Save Screenshot50",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot50": {
      "main": [
        [
          {
            "node": "Locate On Screen48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen48": {
      "main": [
        [
          {
            "node": "Coordinate Parser44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser44": {
      "main": [
        [
          {
            "node": "Click74",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click74": {
      "main": [
        [
          {
            "node": "Save Screenshot51",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot51": {
      "main": [
        [
          {
            "node": "Locate On Screen49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen49": {
      "main": [
        [
          {
            "node": "Coordinate Parser45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser45": {
      "main": [
        [
          {
            "node": "Click75",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click75": {
      "main": [
        [
          {
            "node": "Save Screenshot53",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen50": {
      "main": [
        [
          {
            "node": "Coordinate Parser46",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser46": {
      "main": [
        [
          {
            "node": "Click76",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click76": {
      "main": [
        [
          {
            "node": "Save Screenshot52",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot52": {
      "main": [
        [
          {
            "node": "Locate On Screen51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Locate On Screen51": {
      "main": [
        [
          {
            "node": "Coordinate Parser47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coordinate Parser47": {
      "main": [
        [
          {
            "node": "Click77",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click77": {
      "main": [
        [
          {
            "node": "Loop Over Items8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Screenshot52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot53": {
      "main": [
        [
          {
            "node": "Locate On Screen50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Screenshot32",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Screenshot23": {
      "main": [
        [
          {
            "node": "Local OCR Tesseract4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Local OCR Tesseract4": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-28T12:57:54.134Z",
  "id": "UWxZmdL6sIYT0Xdn",
  "meta": null,
  "name": "Carga-Albanesi-Exactian",
  "nodes": [
    {
      "parameters": {},
      "id": "1045d6e4-27b3-44ab-88e4-0686db3bee95",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        3800,
        -440
      ]
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        3800,
        -260
      ],
      "id": "9d26445e-0302-4091-90a4-75e323bff12a",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(5);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "8fdf8ce0-8808-46f0-9fb7-84931230611a",
      "name": "Save Screenshot5",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4900,
        -440
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Barra-Id-Ex.png', grayscale=True, confidence=0.6))\"\n"
      },
      "id": "bf79903d-d2b2-495a-813a-8afbe52afec8",
      "name": "Locate On Screen5",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5080,
        -440
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "be5755cb-2cb4-4432-81a5-be070ce9aa50",
      "name": "Coordinate Parser5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5240,
        -440
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('Coordinate Parser5').item.json.x }}, {{ $('Coordinate Parser5').item.json.y }}); pyautogui.typewrite('30-70756092-0')\""
      },
      "id": "af58305d-75e0-42c3-b869-a06c6c0c34da",
      "name": "Click6",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        -440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Usuarios-Personal"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4300,
        -440
      ],
      "id": "ef2f1944-e74d-471b-9427-5b4063c96569",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "ZvkTz1mTFoOcPh6G",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Login\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        -460
      ],
      "typeVersion": 1,
      "id": "14eaec89-44ea-4551-9e78-b61766891c97",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"errores\": []\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4020,
        -440
      ],
      "id": "bdfedc88-ce95-4e0e-bf82-af6cadce4a30",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "4782318a-5f32-4b8e-9a43-0cca818170a4",
      "name": "Save Screenshot6",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4900,
        -220
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Barra-Secret-Ex.png', grayscale=True, confidence=0.8))\"\n"
      },
      "id": "be701d57-a215-4579-b917-2c14f6e108f2",
      "name": "Locate On Screen6",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5080,
        -220
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "4a965153-0f2f-4dbb-8947-fa3888a40d58",
      "name": "Coordinate Parser6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5240,
        -220
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('Coordinate Parser6').item.json.x}}, {{ $('Coordinate Parser6').item.json.y }}); pyautogui.typewrite('Galicia52')\""
      },
      "id": "f5eb10d9-75fb-4a7f-834c-a971aea665da",
      "name": "Click7",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        -220
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Login\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        -240
      ],
      "typeVersion": 1,
      "id": "74f392e6-7693-4524-a3f1-0d1ed5dd3e50",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "ada98ac1-bac8-43fb-94d1-b445a492a0d7",
      "name": "Save Screenshot7",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4900,
        0
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Ingresar-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "d9a1d848-b855-4b15-a7e6-3432bd2b3356",
      "name": "Locate On Screen7",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5080,
        0
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "74bc9a66-e601-4764-92aa-bfd5b7980184",
      "name": "Coordinate Parser7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5240,
        0
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('Coordinate Parser7').item.json.x }}, {{ $('Coordinate Parser7').item.json.y }})\""
      },
      "id": "32e28552-df08-4cf8-99e2-805df804281e",
      "name": "Click8",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        0
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        -20
      ],
      "typeVersion": 1,
      "id": "f090fb03-6872-44fc-853d-d07a93e7671c",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "command": "=powershell -Command \"Start-Process 'C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe' -ArgumentList '--remote-debugging-port=1313', '--user-data-dir=C:\\Usuarios\\UusarioNuevoPrueba\\.n8n\\chromeprofile', 'https://ctarroyoseco.exactian.solutions/index.php?f=c'; Start-Sleep -Seconds 5; $chromeProcess = Get-NetTCPConnection -LocalPort 1313; if ($chromeProcess) { Write-Host 'Chrome abierto correctamente'; exit 0 } else { Write-Host 'Error: No se pudo abrir Chrome o el puerto está ocupado.'; exit 1 }\""
      },
      "id": "26567aa1-0a19-4c66-b942-2abb5a878053",
      "name": "OpenBrowserCmd1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4440,
        -600
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "documento",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4400,
        460
      ],
      "id": "705ed7e0-e2cd-49dc-90ca-e70ea9ee453e",
      "name": "Split Out"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y7').item.json.x }}, {{ $('X,Y7').item.json.y }})\""
      },
      "id": "bbb5dc81-dae6-489d-bbcf-9780bf0961ad",
      "name": "Click9",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Filtros\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        860
      ],
      "typeVersion": 1,
      "id": "c782a6c7-e356-4b66-830b-6a5d26a75ca0",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Personal-Exactian"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4920,
        1520
      ],
      "id": "9ceb7d2f-158c-4974-89d5-9cbcde2e3d3e",
      "name": "Supabase9",
      "credentials": {
        "supabaseApi": {
          "id": "ZvkTz1mTFoOcPh6G",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "7bc88570-7419-4ff1-b2cf-cb1e423d8cb7",
      "name": "X,Y7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        880
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Filtros-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "5a7c9b99-9bd0-4358-8c23-d390d25b644f",
      "name": "Locate11",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        880
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(5);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "cd01b380-bbe4-4c0e-a3d5-18f1ba2314fe",
      "name": "Screenshot11",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        880
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; documento='{{$('Loop Over Items2').item.json.documento}}';time.sleep(0);pyautogui.doubleClick({{ $('X,Y8').item.json.x }}, {{ $('X,Y8').item.json.y }}); pyautogui.typewrite(['backspace']);pyautogui.typewrite(fr'{documento}');pyautogui.typewrite(['Enter'])\""
      },
      "id": "fca37314-577b-4adf-af09-d874efb78358",
      "name": "Click13",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        1100
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Barra documentos\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        1080
      ],
      "typeVersion": 1,
      "id": "d2e75d77-742c-403d-b5d4-090d49b6e4da",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "05802121-e9e0-4b81-a580-a51803c14e22",
      "name": "X,Y8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        1100
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Barra-Documentos-Ex.png', grayscale=True, confidence=0.6))\""
      },
      "id": "395e34cc-db2e-4b49-8c46-4658f065e7a7",
      "name": "Locate1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        1100
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "e94d643a-e52a-48b7-a2f2-d50e53a5efd5",
      "name": "Screenshot1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        1100
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y9').item.json.x }}, {{ $('X,Y9').item.json.y }})\""
      },
      "id": "0f0c0868-16df-4c19-93e2-002cf0ade1d6",
      "name": "Click31",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        1320
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Aplicar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        1300
      ],
      "typeVersion": 1,
      "id": "0e90e4a8-74dd-42da-9762-5691573dea4f",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "2fdb0149-f076-4a74-8883-53d7dc3864ea",
      "name": "X,Y9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        1320
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Aplicar-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "44debd55-d174-4eda-917a-cb2349ba0fca",
      "name": "Locate12",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        1320
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "be784d94-810b-4d17-8ff9-38fbacb72a18",
      "name": "Screenshot12",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        1320
      ]
    },
    {
      "parameters": {
        "content": "## Barra buscar\n**Ingresa Nombre de Usuario**",
        "height": 200,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        1720
      ],
      "typeVersion": 1,
      "id": "f3ae1575-0cb3-4aee-a28c-3a19577d80f3",
      "name": "Sticky Note29"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y10').item.json.x }}, {{ $('X,Y10').item.json.y }})\""
      },
      "id": "6ff3ed9a-7698-4345-96ca-abe7f2b13720",
      "name": "Click32",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        2220
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        2200
      ],
      "typeVersion": 1,
      "id": "23366d2a-ff4a-45b3-b7d8-26a658819272",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "94d0b4da-fe6d-4ce6-b77b-640ca0859048",
      "name": "X,Y10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        2220
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Documento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "c0003cd3-17eb-4253-9cc5-2cdbb7321849",
      "name": "Locate13",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        2220
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "f873ed12-2d04-4fc3-96ba-a6ddc5acada0",
      "name": "Screenshot13",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        2220
      ]
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        2860
      ],
      "typeVersion": 1,
      "id": "aea2489f-0486-4838-941d-297760323db8",
      "name": "Sticky Note43"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Loop Over Items2').item.json.documento }}",
                    "rightValue": "E-GE-04D",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a5f6a6a0-49a4-4cac-b763-a19052173cce"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-04D"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1733e446-c337-45b9-bd6c-a65b8912055d",
                    "leftValue": "={{ $('Loop Over Items2').item.json.documento }}",
                    "rightValue": "E-GE-14D",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-14D"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dca69007-f24e-4bb8-bbea-f2ae26ffc4ce",
                    "leftValue": "={{ $('Loop Over Items2').item.json.documento }}",
                    "rightValue": "E-GE-17D",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-17D"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4920,
        2880
      ],
      "id": "89a06206-f1e9-44f8-b609-0c306a28e2b6",
      "name": "Switch"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y11').item.json.x }}, {{ $('X,Y11').item.json.y }})\""
      },
      "id": "4523acf0-c966-4932-baae-bc44b8f3537d",
      "name": "Click36",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        2440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        2420
      ],
      "typeVersion": 1,
      "id": "95c8286b-02cd-4e13-a7ca-ec86cf42f249",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "1774b27f-ccbd-477c-8126-26a02df66d61",
      "name": "X,Y11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        2440
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-PorDocumento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "70284b71-564a-4200-8c3f-5be41faad82f",
      "name": "Locate14",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        2440
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "1320b37c-6921-4885-9b37-0e450f649bce",
      "name": "Screenshot14",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        2440
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y12').item.json.x }}, {{ $('X,Y12').item.json.y }})\""
      },
      "id": "bb93cf87-b306-43ef-9f69-3a5a375510e8",
      "name": "Click37",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        2660
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        2640
      ],
      "typeVersion": 1,
      "id": "25e936ae-b6f4-4acb-9f6e-a55bd054da70",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "ffda5c7c-8848-4f14-919b-3364fdde4b93",
      "name": "X,Y12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        2660
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-SeleccionaDocumento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "725e722a-6578-4c02-822f-da7d64fe6d66",
      "name": "Locate15",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        2660
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "a3bff45c-016f-444c-aedd-693758b60931",
      "name": "Screenshot15",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        2660
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');nombre= '{{$('Loop Over Items3').item.json.Nombre}}'; time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(0); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\ARCA\\Merge ARCA'); time.sleep(2);pyautogui.typewrite(['enter'])\""
      },
      "id": "5c80e4ef-e9d1-4bb6-9edd-1484ee247156",
      "name": "Ruta MonoyPago1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5420,
        2880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');nombre= '{{$('Loop Over Items3').item.json.Nombre}}';time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(1); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\ARCA\\Inscripcion Autonomo Monotributo');time.sleep(1);pyautogui.typewrite(['enter'])\""
      },
      "id": "c07c3b53-dccc-4098-9e41-8a876533aeb0",
      "name": "Ruta Insc.Auto.Mono1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5720,
        2880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');;nombre= '{{$('Loop Over Items3').item.json.Nombre}}'; time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(0); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\LA SEGUNDA\\Pago poliza acc personales'); time.sleep(2);pyautogui.typewrite(['enter'])\""
      },
      "id": "e1a1aeee-c389-4fca-a2ff-dddf9231518b",
      "name": "Ruta PPolisa.Acc.Pers1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        2880
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "batchSize": "=1",
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        5120,
        1520
      ],
      "id": "56d6282d-a0d9-45d1-bc65-e3ed7d7fcf0a",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y13').item.json.x }}, {{ $('X,Y13').item.json.y }}); pyautogui.typewrite(['backspace']); pyautogui.typewrite('{{$('Loop Over Items3').item.json.Apellido}}'); pyautogui.typewrite(['Enter'])\""
      },
      "id": "bc2a449c-b076-4d95-b55b-fe1d484c76a2",
      "name": "Click38",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        1760
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "af808d90-d1d9-428e-9c91-56fda269fe7d",
      "name": "X,Y13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        1760
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Barra-Buscar-Ex.png', grayscale=True, confidence=0.6))\""
      },
      "id": "da6aecda-92fe-410c-9a3f-4c362046bf4d",
      "name": "Locate16",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        1760
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(4);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "bf264f8a-0c86-46cc-96a4-b5065776a3b4",
      "name": "Screenshot16",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        1760
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "23c68af8-c023-4792-8696-46a64644f0e1",
      "name": "Save Screenshot8",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4900,
        220
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Documentacion-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "a20a8468-ad6c-4236-9c7c-cf533957bb99",
      "name": "Locate On Screen8",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5080,
        220
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "b730c07a-bc74-429e-b908-57756578a308",
      "name": "Coordinate Parser8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5240,
        220
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('Coordinate Parser8').item.json.x }}, {{ $('Coordinate Parser8').item.json.y }})\""
      },
      "id": "23b38459-0d80-4112-b09f-0864bb4cba10",
      "name": "Click10",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        220
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Documentación\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        200
      ],
      "typeVersion": 1,
      "id": "2513f374-1db7-431e-ad3b-32694a7f8e72",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "376794b1-cff8-497d-b94a-b5a5395bdcc2",
      "name": "Save Screenshot9",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4900,
        440
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Pdocumentos-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "1fd41da4-1924-4e4f-89be-4e78e0b18c64",
      "name": "Locate On Screen9",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5080,
        440
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "2c0e6c34-d78c-4111-a5a0-50b77b5f3d2f",
      "name": "Coordinate Parser9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5240,
        440
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('Coordinate Parser9').item.json.x }}, {{ $('Coordinate Parser9').item.json.y }})\""
      },
      "id": "272c2aa6-caa4-4c6b-9090-2e64e2b4d64e",
      "name": "Click11",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Documentos\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        420
      ],
      "typeVersion": 1,
      "id": "6571f059-ed42-44a3-91c9-885f615af7b9",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        3080
      ],
      "typeVersion": 1,
      "id": "fcc69cb8-4b5d-435c-8782-c5d024e1742f",
      "name": "Sticky Note35"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "9a7c6010-fe94-4f53-a719-e1a28bd073eb",
      "name": "Save Screenshot31",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        3120
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\Buscar-En-CD.png', grayscale=True, confidence=0.8))\""
      },
      "id": "67955e0a-d809-4eb3-a63e-1c9aa9887c5b",
      "name": "Locate On Screen30",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        3120
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "5960102e-5697-434c-aa75-a3743b3f52a3",
      "name": "Coordinate Parser28",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        3120
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time;  apellido='{{$('Loop Over Items3').item.json.Apellido}}'; time.sleep(2);pyautogui.click({{ $('Coordinate Parser28').item.json.x }}, {{ $('Coordinate Parser28').item.json.y }}); pyautogui.typewrite(fr'{apellido}')\""
      },
      "id": "b64ba4e1-de21-4f6d-93d5-7998c30afdb2",
      "name": "Click39",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        3120
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"documento\": \"E-GE-04D\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4900,
        660
      ],
      "id": "1e70360a-e7b8-44c8-af19-58501bc691aa",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y').item.json.x }}, {{ $('X,Y').item.json.y }})\""
      },
      "id": "de64058e-9489-45c9-82d8-7f1412750ae9",
      "name": "Click",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        880
      ],
      "typeVersion": 1,
      "id": "6cd0005c-75be-465b-a745-9e49aa30090c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "99a2a7b7-8803-45d5-88fc-d9b2bc030f50",
      "name": "X,Y",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7040,
        900
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Filtros-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "8322b964-349f-4a9c-bd81-6eaa9ae63a15",
      "name": "Locate",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        900
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(5); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "8cb6f854-4dfb-4892-81e2-70edbeb3597c",
      "name": "Screenshot",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        900
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; documento='{{$('Loop Over Items4').item.json.documento}}';time.sleep(0);pyautogui.doubleClick({{ $('X,Y8').item.json.x }}, {{ $('X,Y8').item.json.y }}); pyautogui.typewrite(['backspace']);pyautogui.typewrite(fr'{documento}');pyautogui.typewrite(['Enter'])\""
      },
      "id": "8bbc33c3-d6a3-43dc-8d13-dfe31504496f",
      "name": "Click14",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        1120
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        1100
      ],
      "typeVersion": 1,
      "id": "c953e7f6-ee40-4a8f-a7b6-131358ff6953",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "67d775e8-e79d-43d1-b53a-f98871513921",
      "name": "X,Y14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7040,
        1120
      ],
      "disabled": true
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Barra-Documentos-Ex.png', grayscale=True, confidence=0.6))\""
      },
      "id": "61de0d0a-6043-4698-b4c7-6a8eb2cbaf7d",
      "name": "Locate2",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        1120
      ],
      "retryOnFail": true,
      "disabled": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "1b84e3aa-1611-4667-80fe-072f18639f43",
      "name": "Screenshot2",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        1120
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y15').item.json.x }}, {{ $('X,Y15').item.json.y }})\""
      },
      "id": "25139c04-7201-4fe5-91f5-85553f73d3e8",
      "name": "Click40",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        1340
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        1320
      ],
      "typeVersion": 1,
      "id": "d5b0d776-3838-458c-b973-c5259d21d329",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "f12a2b32-d413-4b08-ba4b-030234d5ed16",
      "name": "X,Y15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7040,
        1340
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Aplicar-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "20189e36-f529-45dd-889a-94b37cf7aeff",
      "name": "Locate17",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        1340
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "fcb9a25a-5863-4faf-b876-30b38eef332b",
      "name": "Screenshot17",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        1340
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"documento\": \"E-GE-14D\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6600,
        680
      ],
      "id": "1b9f9ce3-9786-43f1-9a8a-6745fc32e468",
      "name": "Loop Over Items4"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y20').item.json.x }}, {{ $('X,Y20').item.json.y }})\""
      },
      "id": "e5acfd30-f084-4e8b-8239-0eb1e1ce0d66",
      "name": "Click12",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        880
      ],
      "typeVersion": 1,
      "id": "9a68a17c-7a2f-4641-b77c-8c3e4beda5df",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "cca9087a-8af1-4533-bfd7-298a4842fc85",
      "name": "X,Y20",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        900
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Filtros-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "6c0584ae-914b-4118-adaf-1cf7cdcb1901",
      "name": "Locate22",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        900
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(5);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "9453de4d-e999-4764-ac8a-23b020014a8a",
      "name": "Screenshot22",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        900
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; documento='{{$('Loop Over Items6').item.json.documento}}';time.sleep(0);pyautogui.doubleClick({{ $('X,Y8').item.json.x }}, {{ $('X,Y8').item.json.y }}); pyautogui.typewrite(['backspace']);pyautogui.typewrite(fr'{documento}');pyautogui.typewrite(['Enter'])\""
      },
      "id": "d717328d-0f00-4d0f-948d-215408d5e0ad",
      "name": "Click15",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        1120
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        1100
      ],
      "typeVersion": 1,
      "id": "80c96ef5-a2be-4e8f-b7c1-7f9278019649",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "79d1c944-0e6b-48a3-b1d1-ee36acef515e",
      "name": "X,Y21",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        1120
      ],
      "disabled": true
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Barra-Documentos-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "7fc821bb-e934-48ed-b2d6-5dfcb663f129",
      "name": "Locate3",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        1120
      ],
      "retryOnFail": true,
      "disabled": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(4);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "a3fef716-62cc-4b82-a5df-e6ff23021ee5",
      "name": "Screenshot3",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        1120
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y22').item.json.x }}, {{ $('X,Y22').item.json.y }})\""
      },
      "id": "75d854d4-21d4-420a-8c0b-c3f98711296e",
      "name": "Click49",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        1340
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        1320
      ],
      "typeVersion": 1,
      "id": "09f7b8ba-1a25-45d4-890e-e4a37cb489df",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "93005a28-ef5a-4789-bc4e-9eba4a8ed0df",
      "name": "X,Y22",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        1340
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Aplicar-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "9a746208-47f7-4193-8306-3a022b8d7aa9",
      "name": "Locate23",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        1340
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(4);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "2567f05b-3a3a-4089-98ab-275679c91ba4",
      "name": "Screenshot23",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        1340
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"documento\": \"E-GE-17D\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8260,
        680
      ],
      "id": "22fc61af-14d7-43eb-9c30-ca47de675f5b",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8964488f-7d1c-4bdf-b12a-a03131220e9e",
              "name": "direc",
              "value": "C:/Users/Uusario Nuevo Prueba",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4160,
        -440
      ],
      "id": "8f29b307-23e8-43c7-9613-0de897a1c76a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "command": "=start \"\" \"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\" --remote-debugging-port=1313 --user-data-dir=\"C:\\Users\\Uusuario Nuevo Prueba\\.n8n\\chromeprofile\" https://ctarroyoseco.exactian.solutions/index.php?f=c"
      },
      "id": "9a9dff92-b145-480d-8e6d-ef0f6baa556a",
      "name": "OpenBrowserCmd",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "command": "=powershell -Command \"$profilePath = 'C:\\Usuarios\\UusarioNuevoPrueba\\.n8n\\chromeprofile'; Get-CimInstance Win32_Process -Filter \\\"Name = 'chrome.exe'\\\" | Where-Object { $_.CommandLine -like \\\"*--user-data-dir=$profilePath*\\\" } | ForEach-Object { Stop-Process -Id $_.ProcessId -Force }; Start-Sleep -Seconds 2; Start-Process 'C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe' -ArgumentList '--remote-debugging-port=1313', \\\"--user-data-dir=$profilePath\\\", 'https://ctarroyoseco.exactian.solutions/index.php?f=c'; Start-Sleep -Seconds 5; $chromeProcess = Get-NetTCPConnection -LocalPort 1313; if ($chromeProcess) { Write-Host 'Chrome abierto correctamente'; exit 0 } else { Write-Host 'Error: No se pudo abrir Chrome o el puerto está ocupado.'; exit 1 }\""
      },
      "id": "0140bca6-d236-499b-8d86-07b44e0f7629",
      "name": "Close&Open",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4440,
        -440
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Seleccionar Archivo\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        3320
      ],
      "typeVersion": 1,
      "id": "547f46b3-b361-4d96-93a4-dd3de7e365bc",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "3ebaf6b6-1495-489c-a922-0040c308952e",
      "name": "Save Screenshot40",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        3360
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\pdf-save-CD.png', grayscale=True, confidence=0.8))\""
      },
      "id": "c95a65de-420e-4fb7-8aff-d4706b1fcd01",
      "name": "Locate On Screen38",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        3360
      ],
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "022b498d-0911-43f5-bcef-16e71d549b0b",
      "name": "Coordinate Parser34",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5380,
        3360
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('Coordinate Parser34').item.json.x }}, {{ $('Coordinate Parser34').item.json.y }})\""
      },
      "id": "4f220293-96f5-4a71-8753-5ae5c02cad9d",
      "name": "Click58",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        3360
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        3540
      ],
      "typeVersion": 1,
      "id": "1aaf794b-14b7-4393-a7b7-586cbdffdcc8",
      "name": "Sticky Note53"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = 'C:/Users/Uusario Nuevo Prueba';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "7f3a9460-98e6-4541-ab3c-4b601757ff4d",
      "name": "Save Screenshot41",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        3580
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = 'C:/Users/Uusario Nuevo Prueba'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-FechaDesde-Ex.png', grayscale=True, confidence=0.7))\""
      },
      "id": "0a7029d0-2a21-4178-8254-483ced73ded4",
      "name": "Locate On Screen39",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5080,
        3580
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "7d42b44b-7f88-476e-b9f0-0f3f8df6ab41",
      "name": "Coordinate Parser35",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5240,
        3580
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import datetime; import time; desde = datetime.now().strftime('%d-%m-%Y'); time.sleep(4); pyautogui.click({{ $json.x }}, {{ $json.y +20}}); pyautogui.typewrite(fr'{desde}')\"\n\n"
      },
      "id": "09d9ab2f-395f-4680-9a22-30db208d09dd",
      "name": "Click59",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5400,
        3580
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = 'C:/Users/Uusario Nuevo Prueba'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-FechaHasta-Ex.png', grayscale=True, confidence=0.7))\""
      },
      "id": "75b35250-541a-4422-b173-35be923e936b",
      "name": "Locate On Screen40",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5740,
        3580
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "944bd841-cbaa-459d-8938-b2fb0dedbe87",
      "name": "Coordinate Parser36",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5880,
        3580
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import datetime; import time; from calendar import monthrange; current_date = datetime.now(); next_month = current_date.replace(month=current_date.month + 1) if current_date.month != 12 else current_date.replace(year=current_date.year + 1, month=1); day = next_month.day; next_month = next_month.replace(day=min(day, monthrange(next_month.year, next_month.month)[1])); hasta = next_month.strftime('%d-%m-%Y'); time.sleep(2); pyautogui.click(1015, 555); pyautogui.typewrite(fr'{hasta}')\""
      },
      "id": "3354ce4b-4791-47bf-a098-da304079ede8",
      "name": "Click60",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        3580
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        3780
      ],
      "typeVersion": 1,
      "id": "573d223f-00fa-46dd-9658-8a796252d107",
      "name": "Sticky Note54"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "97887c9f-6bcb-4115-bd39-6071639ec9c5",
      "name": "Save Screenshot42",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        3820
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Aceptar-Ex.png', grayscale=True, confidence=0.9))\""
      },
      "id": "d34f2bad-c344-4520-86ff-f95de9d66259",
      "name": "Locate On Screen41",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        3820
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "2df47172-725c-4e64-8d6d-d35de84bcd3c",
      "name": "Coordinate Parser37",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5300,
        3820
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(2);pyautogui.click({{ $('Coordinate Parser37').item.json.x }}, {{ $('Coordinate Parser37').item.json.y }}); time.sleep(8)\""
      },
      "id": "84c4bb6d-54df-49ba-ac28-f2fd934a5d58",
      "name": "Click61",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6020,
        3820
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = 'C:/Users/Uusario Nuevo Prueba';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "c83466cd-8d86-45e1-b6a4-abf7250889e6",
      "name": "Save Screenshot43",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5600,
        3580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8b5ba9d6-324a-4cee-9597-7ca263d74008",
              "leftValue": "={{ $json.stdout }}",
              "rightValue": "=No Apto",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6020,
        2000
      ],
      "id": "7e74f24b-12d0-4266-9fd1-2b6acbbc9135",
      "name": "If"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab; from datetime import date; import datetime; import time; import pyautogui; time.sleep(8);direc = 'C:/Users/Uusario Nuevo Prueba'; img = pyautogui.screenshot(region=(1500,390, 150, 50)); img.save(fr'{direc}\\.n8n\\Screenshots\\Exactian\\WorkingScreen.png')\""
      },
      "id": "6d1fb0b8-078b-404d-b597-df805ad6a7da",
      "name": "Save Screenshot21",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        4920,
        2000
      ]
    },
    {
      "parameters": {
        "content": "## Seleccion Nombre\n**Ingresa Nombre de Usuario**",
        "height": 200,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        1960
      ],
      "typeVersion": 1,
      "id": "27d12572-bd2c-4640-956b-0bdb44af30b8",
      "name": "Sticky Note55"
    },
    {
      "parameters": {
        "command": "=python -c \"import cv2, numpy as np; img = cv2.imread(r'C:\\\\Users\\\\Uusario Nuevo Prueba\\\\.n8n\\\\Screenshots\\\\Exactian\\\\WorkingScreen.png'); cropped = img[0:100, 0:300]; hsv = cv2.cvtColor(cropped, cv2.COLOR_BGR2HSV); green1 = cv2.inRange(hsv, (40, 80, 80), (85, 255, 255)); red1 = cv2.inRange(hsv, (0, 80, 80), (10, 255, 255)); red2 = cv2.inRange(hsv, (160, 80, 80), (180, 255, 255)); pinkish = cv2.inRange(hsv, (330//2, 50, 100), (360//2, 255, 255)); green_total = cv2.countNonZero(green1); red_total = cv2.countNonZero(red1) + cv2.countNonZero(red2) + cv2.countNonZero(pinkish); print('Apto' if green_total > red_total * 1.5 else 'No Apto' if red_total > green_total * 1.5 else 'Unknown')\""
      },
      "id": "64215eb1-2c74-4bbd-9106-07f0c9220ade",
      "name": "Local OCR Tesseract",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5120,
        2000
      ],
      "notesInFlow": false,
      "notes": "Get Text and coordinates from Image using local OCR\n\nUses PyTesseract, an open source ocr software to detect the text of an image and the specific coordinates of that text"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Personal-Exactian"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6620,
        1540
      ],
      "id": "f15c3742-5bd6-4774-872a-acce4c62a3bd",
      "name": "Supabase11",
      "credentials": {
        "supabaseApi": {
          "id": "ZvkTz1mTFoOcPh6G",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Barra buscar\n**Ingresa Nombre de Usuario**",
        "height": 200,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        1740
      ],
      "typeVersion": 1,
      "id": "8fe54560-de55-40c4-b58c-cf254282e929",
      "name": "Sticky Note30"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y27').item.json.x }}, {{ $('X,Y27').item.json.y }})\""
      },
      "id": "6bc792f6-790c-4974-ae88-802062c999d8",
      "name": "Click33",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        2240
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        2220
      ],
      "typeVersion": 1,
      "id": "46095460-150f-4914-a99a-724ef441245a",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "90fd19cf-9866-4f9a-9f31-cc1baedcb738",
      "name": "X,Y27",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7000,
        2240
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Documento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "12afc041-4ab8-4953-924d-be89e7702750",
      "name": "Locate28",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        2240
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "0ead7bd7-39b9-40bd-899d-98fec4f0f029",
      "name": "Screenshot28",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        2240
      ]
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        2880
      ],
      "typeVersion": 1,
      "id": "3ed2a32c-648e-4cbb-90ce-cfe9412f7e47",
      "name": "Sticky Note56"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Loop Over Items4').item.json.documento }}",
                    "rightValue": "E-GE-04D",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a5f6a6a0-49a4-4cac-b763-a19052173cce"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-04D"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1733e446-c337-45b9-bd6c-a65b8912055d",
                    "leftValue": "={{ $('Loop Over Items4').item.json.documento }}",
                    "rightValue": "E-GE-14D",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-14D"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dca69007-f24e-4bb8-bbea-f2ae26ffc4ce",
                    "leftValue": "={{ $('Loop Over Items4').item.json.documento }}",
                    "rightValue": "E-GE-17D",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-17D"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        6620,
        2900
      ],
      "id": "dd6c80ec-644b-44b1-b354-b8873b916325",
      "name": "Switch3"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y28').item.json.x }}, {{ $('X,Y28').item.json.y }})\""
      },
      "id": "9dc3dd9f-0c16-446f-b3a6-f35708e6bbb4",
      "name": "Click62",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        2460
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        2440
      ],
      "typeVersion": 1,
      "id": "9316bfef-371f-4631-86b8-ed2a58224a68",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "19bf9449-1cc4-40d1-b9f0-6717c00911ba",
      "name": "X,Y28",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7000,
        2460
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-PorDocumento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "094595b5-71c4-43ed-b4fc-9d1141e2c41d",
      "name": "Locate29",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        2460
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "5d4055ff-90bf-4bb5-93ad-449d17cdb588",
      "name": "Screenshot29",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        2460
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y29').item.json.x }}, {{ $('X,Y29').item.json.y }})\""
      },
      "id": "b32a1052-1fac-42a9-b8d9-c89758263d4c",
      "name": "Click63",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        2680
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        2660
      ],
      "typeVersion": 1,
      "id": "ea90a1e9-02b5-4a8c-9355-fd2eb86efd0b",
      "name": "Sticky Note57"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "de9aa59e-2b88-4880-996e-ed1d60315b5f",
      "name": "X,Y29",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7000,
        2680
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-SeleccionaDocumento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "0cebf73f-326c-4bc0-a51c-eaac7f9f44e5",
      "name": "Locate30",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        2680
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "e9306bc2-d5a9-46c8-b11c-4c471dc171fd",
      "name": "Screenshot30",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        2680
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');nombre= '{{$('Loop Over Items7').item.json.Nombre}}'; time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(0); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\ARCA\\Merge ARCA'); time.sleep(2);pyautogui.typewrite(['enter'])\""
      },
      "id": "e2ac5182-67b7-4a1e-a63c-72881a38970b",
      "name": "Ruta MonoyPago3",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7120,
        2900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');nombre= '{{$('Loop Over Items7').item.json.Nombre}}';time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(1); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\ARCA\\Inscripcion Autonomo Monotributo');time.sleep(1);pyautogui.typewrite(['enter'])\""
      },
      "id": "0e26468d-c993-44e5-8efb-499d752d8180",
      "name": "Ruta Insc.Auto.Mono3",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7420,
        2900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');nombre= '{{$('Loop Over Items7').item.json.Nombre}}';time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(0); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\LA SEGUNDA\\Pago poliza acc personales'); time.sleep(2);pyautogui.typewrite(['enter'])\""
      },
      "id": "0757dd18-ddc0-4b2d-8d10-e575e93d52ec",
      "name": "Ruta PPolisa.Acc.Pers3",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        2900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "batchSize": "=1",
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        6820,
        1540
      ],
      "id": "486d686f-d896-45ae-a0e9-6153da9b1491",
      "name": "Loop Over Items7"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y30').item.json.x }}, {{ $('X,Y30').item.json.y }}); pyautogui.typewrite(['backspace']); pyautogui.typewrite('{{$('Loop Over Items7').item.json.Apellido}}'); pyautogui.typewrite(['Enter'])\""
      },
      "id": "55fb51b1-a4fc-4039-88d9-03d44fe9dbdd",
      "name": "Click64",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        1780
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "a5e1a30b-a054-4cae-9534-4413eef4d7ff",
      "name": "X,Y30",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7000,
        1780
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Barra-Buscar-Ex.png', grayscale=True, confidence=0.6))\""
      },
      "id": "fba53e15-afa2-44c5-b820-32bd510d3c93",
      "name": "Locate31",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        1780
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(4);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "70b59de0-2da6-442c-8655-a67720a9a882",
      "name": "Screenshot31",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        1780
      ]
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        3100
      ],
      "typeVersion": 1,
      "id": "7d7748b4-11e8-435b-ba62-95029e397c98",
      "name": "Sticky Note58"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "9505abb7-53e4-4188-8cf9-968bbb977447",
      "name": "Save Screenshot44",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        3140
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\Buscar-En-CD.png', grayscale=True, confidence=0.8))\""
      },
      "id": "af6b27a3-7c3d-4d87-a205-c01f47369fee",
      "name": "Locate On Screen42",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        3140
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "642247fe-3f16-4ef7-b3ba-3f37f517f47e",
      "name": "Coordinate Parser38",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7000,
        3140
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time;  apellido='{{$('Loop Over Items7').item.json.Apellido}}'; time.sleep(2);pyautogui.click({{ $('Coordinate Parser38').item.json.x }}, {{ $('Coordinate Parser38').item.json.y }}); pyautogui.typewrite(fr'{apellido}')\""
      },
      "id": "200c33af-ec60-4e8f-90ff-b32ac367ada0",
      "name": "Click65",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        3140
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Seleccionar Archivo\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        3340
      ],
      "typeVersion": 1,
      "id": "a48bbaf7-92d7-4aa8-843a-7ad23698fae2",
      "name": "Sticky Note27"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "37320930-5829-44ac-90de-a20371fd6741",
      "name": "Save Screenshot45",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        3380
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\pdf-save-CD.png', grayscale=True, confidence=0.8))\""
      },
      "id": "37c4aaa7-5996-403f-a151-56cb4c2c987d",
      "name": "Locate On Screen43",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        3380
      ],
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "95ce2c21-b849-413b-887a-610dfda8f7c4",
      "name": "Coordinate Parser39",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7080,
        3380
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('Coordinate Parser39').item.json.x }}, {{ $('Coordinate Parser39').item.json.y }})\""
      },
      "id": "3de4e754-975c-4cea-8455-c275fee694ed",
      "name": "Click66",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        3380
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        3560
      ],
      "typeVersion": 1,
      "id": "dd46f212-69ee-4120-b3d0-8de5c3195893",
      "name": "Sticky Note59"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = 'C:/Users/Uusario Nuevo Prueba';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "32487ab8-70e0-4cec-ba4e-779abc6eeff9",
      "name": "Save Screenshot46",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        3600
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = 'C:/Users/Uusario Nuevo Prueba'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-FechaDesde-Ex.png', grayscale=True, confidence=0.7))\""
      },
      "id": "27807697-3e1c-42bd-aa79-abe658f813bd",
      "name": "Locate On Screen44",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6780,
        3600
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "d65e1482-0852-4525-b46f-8c6d5f37e3ea",
      "name": "Coordinate Parser40",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6940,
        3600
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import datetime; import time; desde = datetime.now().strftime('%d-%m-%Y'); time.sleep(4); pyautogui.click({{ $json.x }}, {{ $json.y +20}}); pyautogui.typewrite(fr'{desde}')\"\n\n"
      },
      "id": "11ed088e-0f9b-4f1d-a7e8-7673ee66ff93",
      "name": "Click67",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7100,
        3600
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = 'C:/Users/Uusario Nuevo Prueba'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-FechaHasta-Ex.png', grayscale=True, confidence=0.7))\""
      },
      "id": "0ce330f8-63b9-47c0-8b9e-bf807b2e0eb2",
      "name": "Locate On Screen45",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7440,
        3600
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "f016c331-6968-4ef2-8772-d6e18d346ab4",
      "name": "Coordinate Parser41",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7580,
        3600
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import datetime; import time; from calendar import monthrange; current_date = datetime.now(); next_month = current_date.replace(month=current_date.month + 1) if current_date.month != 12 else current_date.replace(year=current_date.year + 1, month=1); day = next_month.day; next_month = next_month.replace(day=min(day, monthrange(next_month.year, next_month.month)[1])); hasta = next_month.strftime('%d-%m-%Y'); time.sleep(2); pyautogui.click(1015, 555); pyautogui.typewrite(fr'{hasta}')\""
      },
      "id": "620c5bd8-c169-4b31-9a73-633c71035663",
      "name": "Click68",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        3600
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        3800
      ],
      "typeVersion": 1,
      "id": "4fe19e5b-365c-43c1-bf4f-9849ae0603e6",
      "name": "Sticky Note60"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "1bd37dd6-7166-46b1-ba60-0586e14ba8e8",
      "name": "Save Screenshot47",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        3840
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Aceptar-Ex.png', grayscale=True, confidence=0.9))\""
      },
      "id": "06d57015-579e-48e5-8cf1-63feea6985a8",
      "name": "Locate On Screen46",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        3840
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "819786f7-0656-40cd-896d-1279e00375d8",
      "name": "Coordinate Parser42",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7000,
        3840
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(2);pyautogui.click({{ $('Coordinate Parser42').item.json.x }}, {{ $('Coordinate Parser42').item.json.y }}); time.sleep(8)\""
      },
      "id": "534c6f46-c45c-44ac-8d8a-84e74ecad882",
      "name": "Click69",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7720,
        3840
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = 'C:/Users/Uusario Nuevo Prueba';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "60f902f4-9559-415c-911c-584210cc55bf",
      "name": "Save Screenshot48",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7300,
        3600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8b5ba9d6-324a-4cee-9597-7ca263d74008",
              "leftValue": "={{ $json.stdout }}",
              "rightValue": "=No Apto",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7720,
        2020
      ],
      "id": "6d0ca703-a29a-4368-b151-0dabc83d5c48",
      "name": "If3"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab; from datetime import date; import datetime; import time; import pyautogui; time.sleep(8);direc = 'C:/Users/Uusario Nuevo Prueba'; img = pyautogui.screenshot(region=(1500,390, 150, 50)); img.save(fr'{direc}\\.n8n\\Screenshots\\Exactian\\WorkingScreen.png')\""
      },
      "id": "d5086eea-3534-4ff9-8f4e-69662748ba2f",
      "name": "Save Screenshot22",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6620,
        2020
      ]
    },
    {
      "parameters": {
        "content": "## Seleccion Nombre\n**Ingresa Nombre de Usuario**",
        "height": 200,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6280,
        1980
      ],
      "typeVersion": 1,
      "id": "0850bd69-51e6-4b0d-a4fe-c72989206383",
      "name": "Sticky Note61"
    },
    {
      "parameters": {
        "command": "=python -c \"import cv2, numpy as np; img = cv2.imread(r'C:\\\\Users\\\\Uusario Nuevo Prueba\\\\.n8n\\\\Screenshots\\\\Exactian\\\\WorkingScreen.png'); cropped = img[0:100, 0:300]; hsv = cv2.cvtColor(cropped, cv2.COLOR_BGR2HSV); green1 = cv2.inRange(hsv, (40, 80, 80), (85, 255, 255)); red1 = cv2.inRange(hsv, (0, 80, 80), (10, 255, 255)); red2 = cv2.inRange(hsv, (160, 80, 80), (180, 255, 255)); pinkish = cv2.inRange(hsv, (330//2, 50, 100), (360//2, 255, 255)); green_total = cv2.countNonZero(green1); red_total = cv2.countNonZero(red1) + cv2.countNonZero(red2) + cv2.countNonZero(pinkish); print('Apto' if green_total > red_total * 1.5 else 'No Apto' if red_total > green_total * 1.5 else 'Unknown')\""
      },
      "id": "2b688332-8986-4ca4-b524-784992575f77",
      "name": "Local OCR Tesseract3",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6820,
        2020
      ],
      "notesInFlow": false,
      "notes": "Get Text and coordinates from Image using local OCR\n\nUses PyTesseract, an open source ocr software to detect the text of an image and the specific coordinates of that text"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Personal-Exactian"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        8280,
        1540
      ],
      "id": "0445205f-21be-4d2d-b698-3d6a3aaf6f9f",
      "name": "Supabase12",
      "credentials": {
        "supabaseApi": {
          "id": "ZvkTz1mTFoOcPh6G",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Barra buscar\n**Ingresa Nombre de Usuario**",
        "height": 200,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        1740
      ],
      "typeVersion": 1,
      "id": "ba13f7eb-993a-42bb-8425-8271e9550acc",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y31').item.json.x }}, {{ $('X,Y31').item.json.y }})\""
      },
      "id": "740ef17d-bd32-4897-86fa-b6f1b262ebf0",
      "name": "Click34",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        2240
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        2220
      ],
      "typeVersion": 1,
      "id": "1c9e9ff3-0449-4e69-85a4-868f76fbd79f",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "4347a722-2892-4f1e-99e7-37b462464620",
      "name": "X,Y31",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        2240
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Documento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "2760427d-3e83-4a0f-a136-8e54ffac020c",
      "name": "Locate32",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        2240
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "a863031f-8469-4d45-b466-4c0873dc8aab",
      "name": "Screenshot32",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        2240
      ]
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        2880
      ],
      "typeVersion": 1,
      "id": "ecb5ee99-efb6-46dc-8d92-c63696f54c51",
      "name": "Sticky Note62"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Loop Over Items6').item.json.documento }}",
                    "rightValue": "E-GE-04D",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a5f6a6a0-49a4-4cac-b763-a19052173cce"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-04D"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1733e446-c337-45b9-bd6c-a65b8912055d",
                    "leftValue": "={{ $('Loop Over Items6').item.json.documento }}",
                    "rightValue": "E-GE-14D",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-14D"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dca69007-f24e-4bb8-bbea-f2ae26ffc4ce",
                    "leftValue": "={{ $('Loop Over Items6').item.json.documento }}",
                    "rightValue": "E-GE-17D",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "E-GE-17D"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        8280,
        2900
      ],
      "id": "93c96d7a-24c7-46c4-b2c6-c5e951e01378",
      "name": "Switch4"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y32').item.json.x }}, {{ $('X,Y32').item.json.y }})\""
      },
      "id": "152208d2-41d9-45fc-b95b-5f4707e9e714",
      "name": "Click70",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        2460
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        2440
      ],
      "typeVersion": 1,
      "id": "7260c4b6-791e-461a-bbbe-485bf9b0c370",
      "name": "Sticky Note63"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "f43a41a7-d80c-4db9-af83-c0938b1bda7e",
      "name": "X,Y32",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        2460
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-PorDocumento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "2b82f40b-cc7c-4bcc-860e-be633d321e1b",
      "name": "Locate33",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        2460
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "387cfeec-116b-4ddb-bcd5-0f2d990d7266",
      "name": "Screenshot33",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        2460
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.click({{ $('X,Y33').item.json.x }}, {{ $('X,Y33').item.json.y }})\""
      },
      "id": "4faffbd2-6e9e-4fbe-a12d-d6b44416e007",
      "name": "Click71",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        2680
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Boton Ingresar\n**Ingresa Nombre de Usuario**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        2660
      ],
      "typeVersion": 1,
      "id": "1a74a998-796c-4a27-bcc8-695e24003bad",
      "name": "Sticky Note64"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "4df0da19-c7c5-457e-8e64-41fe01649951",
      "name": "X,Y33",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        2680
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-SeleccionaDocumento-Ex.png', grayscale=True, confidence=0.8))\""
      },
      "id": "959091bd-8cbb-402e-92a8-6112cc064593",
      "name": "Locate34",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        2680
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(0);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "21f3eff0-6c7a-4337-9a2a-7365547adabd",
      "name": "Screenshot34",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        2680
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');nombre= '{{$('Loop Over Items8').item.json.Nombre}}'; time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(0); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\ARCA\\Merge ARCA'); time.sleep(2);pyautogui.typewrite(['enter'])\""
      },
      "id": "76964aee-78f8-4eb3-8559-fd28423e3870",
      "name": "Ruta MonoyPago4",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8780,
        2900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');nombre= '{{$('Loop Over Items8').item.json.Nombre}}'; time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(1); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\ARCA\\Inscripcion Autonomo Monotributo');time.sleep(1);pyautogui.typewrite(['enter'])\""
      },
      "id": "966ab657-6761-44dd-abc3-7f6d6d7b79f0",
      "name": "Ruta Insc.Auto.Mono4",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9080,
        2900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; import locale; locale.setlocale(locale.LC_TIME, 'es_ES');from datetime import datetime; current_date = datetime.now(); import time; numero = current_date.strftime('%m'); mes = current_date.strftime('%B').capitalize();anio = current_date.strftime('%Y');nombre= '{{$('Loop Over Items8').item.json.Nombre}}';time.sleep(1); pyautogui.doubleClick(240, 963); time.sleep(5);pyautogui.typewrite(['backspace']); time.sleep(0); pyautogui.typewrite(fr'G:\\.shortcut-targets-by-id\\1Og8spmPVbHsBTZ42rh-L5K9GOHJyggk9\\INGRESOS A PLANTA\\DOCUMENTOS DE INGRESO\\ARCA - SEGURO\\{anio}\\{numero} - {mes} {anio}\\LA SEGUNDA\\Pago poliza acc personales'); time.sleep(2);pyautogui.typewrite(['enter'])\""
      },
      "id": "f92db0c9-7a26-4d00-a294-eb897c43269f",
      "name": "Ruta PPolisa.Acc.Pers4",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        2900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "batchSize": "=1",
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        8480,
        1540
      ],
      "id": "677e29b4-3828-4ad8-b606-d7dd3f176a64",
      "name": "Loop Over Items8"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('X,Y34').item.json.x }}, {{ $('X,Y34').item.json.y }}); pyautogui.typewrite(['backspace']); pyautogui.typewrite('{{$('Loop Over Items8').item.json.Apellido}}'); pyautogui.typewrite(['Enter'])\""
      },
      "id": "049e1048-060b-4637-9b64-ed2a51099b14",
      "name": "Click72",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        1780
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "70c3cab6-8772-46e7-af81-7d93871b0668",
      "name": "X,Y34",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        1780
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; direc = '{{$('Edit Fields').item.json.direc}}';print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Barra-Buscar-Ex.png', grayscale=True, confidence=0.6))\""
      },
      "id": "bca71461-c85b-4fa2-8934-2d920ff54cf1",
      "name": "Locate35",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        1780
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(4);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "11d21941-255c-4d32-a822-fa27a600ef91",
      "name": "Screenshot35",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        1780
      ]
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        3100
      ],
      "typeVersion": 1,
      "id": "f904e34f-c412-48db-a071-e72d213e9aff",
      "name": "Sticky Note65"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "6379a26c-a1a2-4dcb-aa43-5521d71da29e",
      "name": "Save Screenshot49",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        3140
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\Buscar-En-CD.png', grayscale=True, confidence=0.8))\""
      },
      "id": "6b5c6384-10ff-4b8b-9dd9-3a73b4868c97",
      "name": "Locate On Screen47",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        3140
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "a2afd780-5bd6-47c1-981c-bc9e2d3acac6",
      "name": "Coordinate Parser43",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        3140
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time;  apellido='{{$('Loop Over Items8').item.json.Apellido}}'; time.sleep(2);pyautogui.click({{ $('Coordinate Parser43').item.json.x }}, {{ $('Coordinate Parser43').item.json.y }}); pyautogui.typewrite(fr'{apellido}')\""
      },
      "id": "4ed74fb2-e3a4-457d-bb98-cb730ea1b590",
      "name": "Click73",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        3140
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Seleccionar Archivo\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        3340
      ],
      "typeVersion": 1,
      "id": "668719e2-4608-4aac-a4de-e55e2d0afce4",
      "name": "Sticky Note28"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3);direc = '{{$('Edit Fields').item.json.direc}}'; img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "a060746b-ab1c-4d20-9593-b02d2d1ef9ca",
      "name": "Save Screenshot50",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        3380
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\pdf-save-CD.png', grayscale=True, confidence=0.8))\""
      },
      "id": "d78bbdac-a843-41c1-86c1-5d719ee06fe7",
      "name": "Locate On Screen48",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        3380
      ],
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "e1ce2ea2-1ef0-4aff-a12c-307b133d3865",
      "name": "Coordinate Parser44",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8740,
        3380
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(0);pyautogui.doubleClick({{ $('Coordinate Parser44').item.json.x }}, {{ $('Coordinate Parser44').item.json.y }})\""
      },
      "id": "230db3d4-d683-42d7-8e47-6bc9ba1615f5",
      "name": "Click74",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        3380
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        3560
      ],
      "typeVersion": 1,
      "id": "93c4885b-2f87-450d-b8a4-118160d1f72e",
      "name": "Sticky Note66"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = 'C:/Users/Uusario Nuevo Prueba';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "8cb9d586-be6a-4cee-a447-9d3fa88ffc4e",
      "name": "Save Screenshot51",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        3600
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = 'C:/Users/Uusario Nuevo Prueba'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-FechaDesde-Ex.png', grayscale=True, confidence=0.7))\""
      },
      "id": "12af802f-5d4b-405e-adb1-d688bc930d14",
      "name": "Locate On Screen49",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8440,
        3600
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "093a6866-95ed-4984-8f22-8cb46595ed94",
      "name": "Coordinate Parser45",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8600,
        3600
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import datetime; import time; desde = datetime.now().strftime('%d-%m-%Y'); time.sleep(4); pyautogui.click({{ $json.x }}, {{ $json.y +20}}); pyautogui.typewrite(fr'{desde}')\"\n\n"
      },
      "id": "eeaa6ca2-08df-4aaa-aea5-cb39b1b2aa8f",
      "name": "Click75",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8760,
        3600
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = 'C:/Users/Uusario Nuevo Prueba'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-FechaHasta-Ex.png', grayscale=True, confidence=0.7))\""
      },
      "id": "f5afb939-22bf-4608-8d6d-5b86c1790231",
      "name": "Locate On Screen50",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9100,
        3600
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "4611edf5-5a42-4a6c-b83d-231cb7158e6b",
      "name": "Coordinate Parser46",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        9240,
        3600
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import datetime; import time; from calendar import monthrange; current_date = datetime.now(); next_month = current_date.replace(month=current_date.month + 1) if current_date.month != 12 else current_date.replace(year=current_date.year + 1, month=1); day = next_month.day; next_month = next_month.replace(day=min(day, monthrange(next_month.year, next_month.month)[1])); hasta = next_month.strftime('%d-%m-%Y'); time.sleep(2); pyautogui.click(1015, 555); pyautogui.typewrite(fr'{hasta}')\""
      },
      "id": "cab92586-6f28-4328-af48-3617e7cd715a",
      "name": "Click76",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        3600
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Buscar-Dirección\n**Ingresa la dirección \ndonde se va a buscar\nel archivo**",
        "height": 180,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        3800
      ],
      "typeVersion": 1,
      "id": "7d28a87f-c9dd-45e9-86e9-4d1ab3bd9f77",
      "name": "Sticky Note67"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = '{{$('Edit Fields').item.json.direc}}';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "cc08a1dc-8f56-4bd9-bc36-fbf2a46866d5",
      "name": "Save Screenshot52",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        3840
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui;direc = '{{$('Edit Fields').item.json.direc}}'; print(pyautogui.locateCenterOnScreen(fr'{direc}\\.n8n\\Screenshots\\Exactian\\Boton-Aceptar-Ex.png', grayscale=True, confidence=0.9))\""
      },
      "id": "e48a1332-505b-492e-924b-12107eb160ad",
      "name": "Locate On Screen51",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        3840
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const output = $json[\"stdout\"];\n\n// Adjusted regex to match the new input format\nconst regex = /Point\\(x=(\\d+),\\s*y=(\\d+)\\)/;\nconst match = output.match(regex);\n\nconsole.log(\"Input:\", output);\nconsole.log(\"Regex match:\", match);\n\nif (match) {\n    const x = parseInt(match[1], 10);\n    const y = parseInt(match[2], 10);\n    console.log(\"Extracted values:\", { x, y });\n    return [{ x, y }];\n} else {\n    console.error(\"No match found. Invalid input format.\");\n    throw new Error('Invalid input format');\n}\n"
      },
      "id": "3d3e4066-2f20-4649-a89b-7d6827f549cf",
      "name": "Coordinate Parser47",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8660,
        3840
      ]
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(2);pyautogui.click({{ $('Coordinate Parser47').item.json.x }}, {{ $('Coordinate Parser47').item.json.y }}); time.sleep(8)\""
      },
      "id": "251a493a-f037-4d03-959a-e17d57fafca3",
      "name": "Click77",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9380,
        3840
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab;from datetime import date; import datetime; import time; time.sleep(3); direc = 'C:/Users/Uusario Nuevo Prueba';img = ImageGrab.grab(); img.save(fr'{direc}\\.n8n\\Screenshots\\ControlDocumentario\\WorkingScreen-CD.png')\""
      },
      "id": "25f9b950-7fbb-4d0b-a268-8d05689b80b8",
      "name": "Save Screenshot53",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8960,
        3600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8b5ba9d6-324a-4cee-9597-7ca263d74008",
              "leftValue": "={{ $json.stdout }}",
              "rightValue": "=No Apto",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        9380,
        2020
      ],
      "id": "a17fc303-f907-48d9-aee2-f1b2c4328dac",
      "name": "If4"
    },
    {
      "parameters": {
        "command": "=python -c \"from PIL import ImageGrab; from datetime import date; import datetime; import time; import pyautogui; time.sleep(8);direc = 'C:/Users/Uusario Nuevo Prueba'; img = pyautogui.screenshot(region=(1500,390, 150, 50)); img.save(fr'{direc}\\.n8n\\Screenshots\\Exactian\\WorkingScreen.png')\""
      },
      "id": "9fab796f-8dec-402e-b850-3ce8cc5ed5ac",
      "name": "Save Screenshot23",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8280,
        2020
      ]
    },
    {
      "parameters": {
        "content": "## Seleccion Nombre\n**Ingresa Nombre de Usuario**",
        "height": 200,
        "width": 1600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7940,
        1980
      ],
      "typeVersion": 1,
      "id": "8243daf0-3452-4423-a23b-2966a568405a",
      "name": "Sticky Note68"
    },
    {
      "parameters": {
        "command": "=python -c \"import cv2, numpy as np; img = cv2.imread(r'C:\\\\Users\\\\Uusario Nuevo Prueba\\\\.n8n\\\\Screenshots\\\\Exactian\\\\WorkingScreen.png'); cropped = img[0:100, 0:300]; hsv = cv2.cvtColor(cropped, cv2.COLOR_BGR2HSV); green1 = cv2.inRange(hsv, (40, 80, 80), (85, 255, 255)); red1 = cv2.inRange(hsv, (0, 80, 80), (10, 255, 255)); red2 = cv2.inRange(hsv, (160, 80, 80), (180, 255, 255)); pinkish = cv2.inRange(hsv, (330//2, 50, 100), (360//2, 255, 255)); green_total = cv2.countNonZero(green1); red_total = cv2.countNonZero(red1) + cv2.countNonZero(red2) + cv2.countNonZero(pinkish); print('Apto' if green_total > red_total * 1.5 else 'No Apto' if red_total > green_total * 1.5 else 'Unknown')\""
      },
      "id": "d3e89aff-4ac7-41bf-b49e-dde6d4491f61",
      "name": "Local OCR Tesseract4",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8480,
        2020
      ],
      "notesInFlow": false,
      "notes": "Get Text and coordinates from Image using local OCR\n\nUses PyTesseract, an open source ocr software to detect the text of an image and the specific coordinates of that text"
    },
    {
      "parameters": {
        "command": "=python -c \"import pyautogui; from datetime import date; import datetime; import time; time.sleep(3);pyautogui.keyDown('ctrl');pyautogui.typewrite(['w']);pyautogui.keyUp('ctrl')\""
      },
      "id": "f9b5a4a8-87ca-4bc6-99b7-331d79b143c5",
      "name": "CloseTab1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        8700,
        1560
      ]
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "SimonTeralv",
  "repo_path": "",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-06-18T18:38:12.000Z",
  "versionId": "8814b16b-2491-46d4-b061-0730cbc1f241"
}